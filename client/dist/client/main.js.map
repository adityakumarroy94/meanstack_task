{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/core/services/api.service.ts","webpack:///./src/app/core/services/posts.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"body{\\n    height: 100% !important;\\n}\\n\\n.section{\\n    height: 100% !important;\\n}\\n\\n.fa-heart:hover{\\n    color: red;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSx3QkFBd0I7Q0FDM0I7O0FBRUQ7SUFDSSx3QkFBd0I7Q0FDM0I7O0FBRUQ7SUFDSSxXQUFXO0NBQ2QiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImJvZHl7XG4gICAgaGVpZ2h0OiAxMDAlICFpbXBvcnRhbnQ7XG59XG5cbi5zZWN0aW9ue1xuICAgIGhlaWdodDogMTAwJSAhaW1wb3J0YW50O1xufVxuXG4uZmEtaGVhcnQ6aG92ZXJ7XG4gICAgY29sb3I6IHJlZDtcbn0iXX0= */\"","module.exports = \"<div class=\\\"ui placeholder segment section\\\">\\n  <div class=\\\"ui two column very relaxed stackable grid\\\">\\n    <div class=\\\"column\\\">\\n      <div class=\\\"ui form\\\">\\n        <div class=\\\"field\\\">\\n          <label>Post Title</label>\\n          <div class=\\\"ui left icon input\\\">\\n            <input type=\\\"text\\\"  [(ngModel)]=\\\"postname\\\" placeholder=\\\"Post\\\">\\n            <!-- <i class=\\\"user icon\\\"></i> -->\\n          </div>\\n        </div>\\n        <div class=\\\"field\\\">\\n            <label>Description</label>\\n            <div class=\\\"ui left icon input\\\">\\n              <textarea [(ngModel)]=\\\"description\\\" placeholder=\\\"Description\\\" ></textarea>\\n              <!-- <i class=\\\"user icon\\\"></i> -->\\n            </div>\\n          </div>\\n        \\n        <div class=\\\"ui blue submit button\\\" (click) =\\\"onAddPost()\\\">Add Post</div>\\n      </div>\\n    </div>\\n    <div class=\\\"middle aligned column \\\">\\n      \\n       \\n      <!-- <div *ngFor=\\\"let item of posts; let i = index\\\">\\n          <h3 class=\\\"ui header\\\">{{item.name}}</h3>\\n          <div class=\\\"ui section divider\\\"></div>\\n      </div>     -->\\n      <div class=\\\"ui items\\\">\\n        <div class=\\\"item\\\" *ngFor=\\\"let item of posts; let i = index\\\">\\n          <div class=\\\"ui small image\\\">\\n            <img [src]=\\\"item.avatar\\\">\\n          </div>\\n          <div class=\\\"content\\\">\\n            <div class=\\\"header\\\">{{item.name}}</div>\\n            <div class=\\\"meta\\\">\\n              <a class=\\\"heart\\\" (click) =\\\"OnUpvote(i)\\\"> <i class=\\\"fa fa-heart\\\" aria-hidden=\\\"true\\\"></i> </a>\\n              <span class=\\\"price\\\">{{item.upvotes}}</span>\\n              Date:\\n              <span class=\\\"stay\\\">{{item.createdAt | date:'medium'}}</span>\\n              \\n            </div>\\n            <div class=\\\"description\\\">\\n              <p>{{item.description}}</p>\\n            </div>\\n          </div>\\n        </div>\\n       \\n        \\n      </div>    \\n     \\n      \\n    </div>\\n  </div>\\n  <div class=\\\"ui vertical divider\\\">\\n  </div>\\n</div>\\n\\n<router-outlet></router-outlet>\\n\"","import { Component,OnInit, Optional } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { PostService } from './core/services/posts.service';\nimport { Post } from './core/models/posts.model';\nimport * as faker from 'faker'\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  \n    public posts:Post;\n    public postname : any;\n    public description : any;\n    public avatar : any;\n  constructor(\n      private postService : PostService,\n  ){}\n\n  ngOnInit(){\n     this.getData();\n  }\n\n\n  getData(){\n\n\n    this.postService.get().subscribe((data) => {\n      if(data && data != undefined){\n\n        // console.log(this.avatar);\n        this.posts = data;\n      }  \n     }\n    );\n  }\n\n  OnUpvote(index){\n    // console.log(\"upvoted\",index);\n\n    // console.log(this.posts[index]);\n    this.posts[index].upvotes += 1;\n\n    this.postService.upvote(this.posts[index]._id).subscribe((data)=>{\n      // console.log(data);\n    })\n  }\n\n  onAddPost(){\n\n    // console.log(this.postname);\n\n    this.postService.save({\n      name : this.postname,\n      // upvotes : 0,\n      avatar : faker.image.avatar(),\n      description : this.description\n    }).subscribe((data) => {\n      console.log(data);\n      this.postname = '';\n      this.description = '';\n      this.getData();\n    })\n\n    \n  }\n\n  \n\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ApiService } from './core/services/api.service';\nimport { PostService } from  './core/services/posts.service';\nimport { FormsModule } from '@angular/forms';\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [ ApiService,PostService ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../../environments/environment';\nimport { HttpHeaders, HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class ApiService {\n  constructor(\n    private http: HttpClient\n  ) {}\n\n  private formatErrors(error: any) {\n    return  throwError(error.error);\n  }\n\n  get(path: string, params: HttpParams = new HttpParams()): Observable<any> {\n    return this.http.get(`${path}`, { params })\n      .pipe(catchError(this.formatErrors));\n  }\n\n  put(path: string, body: Object = {}): Observable<any> {\n    return this.http.put(\n      `${path}`,\n      JSON.stringify(body)\n    ).pipe(catchError(this.formatErrors));\n  }\n\n  post(path: string, body: Object = {}): Observable<any> {\n    console.log(\"body\",body);\n    \n    return this.http.post(\n      `${path}`,\n      JSON.stringify(body),{\n        headers: new HttpHeaders().set('Content-Type', 'application/json'),\n      }\n    ).pipe(catchError(this.formatErrors));\n  }\n\n  delete(path): Observable<any> {\n    return this.http.delete(\n      `${path}`\n    ).pipe(catchError(this.formatErrors));\n  }\n}","\n    \nimport { Injectable } from '@angular/core';\nimport { HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { ApiService } from './api.service';\nimport { Post } from '../models';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class PostService {\n    constructor(\n        private apiService : ApiService\n    ){}\n\n    get(): Observable<Post> {\n        return this.apiService.get('posts')\n          .pipe(map(data => data.response));\n      }\n\n\n      save(article): Observable<Post> {\n        \n          console.log(article);  \n          return this.apiService.post('post', article)\n            .pipe(map(data => data.response));\n        \n      }\n    \n      upvote(post_id): Observable<Post> {\n        return this.apiService.post('post/upvote',{ post_id });\n      }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}